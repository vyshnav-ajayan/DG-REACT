{"ast":null,"code":"var _jsxFileName = \"/Users/vyshnavajayan/Desktop/DG-REACT/src/modules/Home/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Suspense, useCallback, useRef, useState } from \"react\";\nimport './Home.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport * as homeAction from '../../actions/homeActions';\nimport LoadingIcon from '../../assets/placeholder_for_missing_posters.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageSearchHeader = /*#__PURE__*/React.lazy(_c = () => import('../../shared/components/ImageSearchHeader'));\n_c2 = ImageSearchHeader;\nconst ImageCard = /*#__PURE__*/React.lazy(_c3 = () => import(\"../../shared/components/ImageCard\"));\n_c4 = ImageCard;\n\nfunction Home() {\n  _s();\n\n  const imageList = useSelector(state => state.home.imageList);\n  const title = useSelector(state => state.home.title);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [searchText, setSearchText] = useState('');\n  const [headerEffect, setHeaderEffect] = useState(false);\n  const dispatch = useDispatch();\n  const observer = useRef();\n  const first_card_observer = useRef();\n  const lastImageCardRef = useCallback(node => {\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        if (pageNumber < 3) {\n          setPageNumber(prevPageNumber => prevPageNumber + 1);\n        }\n      }\n    });\n    if (node) observer.current.observe(node);\n  });\n  const firstImageCardRef = useCallback(node => {\n    if (first_card_observer.current) first_card_observer.current.disconnect();\n    first_card_observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        setHeaderEffect(true);\n      } else {\n        setHeaderEffect(false);\n      }\n    });\n    if (node) first_card_observer.current.observe(node);\n  }); //To search after finished typing the name.\n\n  useEffect(() => {\n    if (searchText.length > 0) {\n      const delayDebounceFn = setTimeout(() => {\n        dispatch(homeAction.imageSearchRequest(searchText));\n      }, 1000);\n      return () => clearTimeout(delayDebounceFn);\n    } else {\n      dispatch(homeAction.imageListRequest(1, true));\n    }\n  }, [dispatch, searchText]);\n\n  const onSearch = text => {\n    setSearchText(text);\n  }; // To make the image list request when page number changes.\n\n\n  useEffect(() => {\n    dispatch(homeAction.imageListRequest(pageNumber));\n  }, [dispatch, pageNumber]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" bg-black flex flex-col px-[30px] sm:scrollbar-hide\",\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: LoadingIcon,\n          className: \"h-6 w-6\",\n          alt: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(ImageSearchHeader, {\n        imageHeaderRef: firstImageCardRef,\n        showHeaderEffect: headerEffect,\n        onSearch: onSearch,\n        title: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" overflow-y-auto sm:scrollbar-hide grid grid-cols-3 gap-[30px] mt-14 \",\n      children: imageList.length > 0 ? imageList.map((image, index) => {\n        return /*#__PURE__*/_jsxDEV(Suspense, {\n          fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: LoadingIcon,\n              className: \"h-6 w-6\",\n              alt: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }, this),\n          children: 1 === index ? /*#__PURE__*/_jsxDEV(ImageCard, {\n            imageCardRef: firstImageCardRef,\n            image: image\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 19\n          }, this) : imageList.length === index + 1 ? /*#__PURE__*/_jsxDEV(ImageCard, {\n            imageCardRef: lastImageCardRef,\n            image: image\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(ImageCard, {\n            image: image\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"hvTfUgFAxvElxFaQwl0p8L3TfkI=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c5 = Home;\nexport default Home;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"ImageSearchHeader$React.lazy\");\n$RefreshReg$(_c2, \"ImageSearchHeader\");\n$RefreshReg$(_c3, \"ImageCard$React.lazy\");\n$RefreshReg$(_c4, \"ImageCard\");\n$RefreshReg$(_c5, \"Home\");","map":{"version":3,"sources":["/Users/vyshnavajayan/Desktop/DG-REACT/src/modules/Home/index.js"],"names":["React","Suspense","useCallback","useRef","useState","useSelector","useDispatch","useEffect","homeAction","LoadingIcon","ImageSearchHeader","lazy","ImageCard","Home","imageList","state","home","title","pageNumber","setPageNumber","searchText","setSearchText","headerEffect","setHeaderEffect","dispatch","observer","first_card_observer","lastImageCardRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","firstImageCardRef","length","delayDebounceFn","setTimeout","imageSearchRequest","clearTimeout","imageListRequest","onSearch","text","map","image","index"],"mappings":"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","sourcesContent":["\nimport React, { Suspense, useCallback,useRef,useState} from \"react\";\nimport './Home.css';\nimport { useSelector,useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport * as homeAction from '../../actions/homeActions';\nimport LoadingIcon from '../../assets/placeholder_for_missing_posters.png';\n\nconst ImageSearchHeader = React.lazy(() => import('../../shared/components/ImageSearchHeader'));\nconst ImageCard = React.lazy(() => import(\"../../shared/components/ImageCard\"));\n\nfunction Home() {\n    const imageList = useSelector(state => state.home.imageList);\n    const title = useSelector(state => state.home.title);\n\n    const [pageNumber,setPageNumber] = useState(1);\n    const [searchText, setSearchText] = useState('');\n    const [headerEffect,setHeaderEffect] = useState(false);\n\n    const dispatch = useDispatch();\n    const observer = useRef();\n    const first_card_observer = useRef();\n\n    const lastImageCardRef = useCallback(node => {\n      if (observer.current) observer.current.disconnect()\n      observer.current = new IntersectionObserver(entries => {\n       \n        if (entries[0].isIntersecting) {\n          if(pageNumber < 3){\n          setPageNumber(prevPageNumber => prevPageNumber + 1);\n          }\n        }\n      })\n      if (node) observer.current.observe(node)\n    });\n\n    const firstImageCardRef = useCallback(node => {\n      if (first_card_observer.current) first_card_observer.current.disconnect()\n      first_card_observer.current = new IntersectionObserver(entries => {\n        if (entries[0].isIntersecting) {\n          setHeaderEffect(true)\n        }else{\n          setHeaderEffect(false)\n        }\n      })\n      if (node) first_card_observer.current.observe(node)\n    });\n\n    //To search after finished typing the name.\n    useEffect(() => {\n      if (searchText.length > 0) {\n        const delayDebounceFn = setTimeout(() => {\n      \n          dispatch(homeAction.imageSearchRequest(searchText));\n        }, 1000);\n        return () => clearTimeout(delayDebounceFn);\n      } else {\n    \n        dispatch(homeAction.imageListRequest(1,true));\n      }\n    }, [dispatch, searchText]);\n\n    const onSearch = (text) =>{\n      setSearchText(text);\n    }\n\n    // To make the image list request when page number changes.\n    useEffect(()=>{\n        dispatch(homeAction.imageListRequest(pageNumber))\n    },[dispatch,pageNumber]);\n\n\n  return (\n    <div className=\" bg-black flex flex-col px-[30px] sm:scrollbar-hide\">\n      <Suspense\n        fallback={\n          <div>\n            <img src={LoadingIcon} className=\"h-6 w-6\" alt=\"Back\" />\n          </div>\n        }\n      >\n        <ImageSearchHeader\n          imageHeaderRef={firstImageCardRef}\n          showHeaderEffect={headerEffect}\n          onSearch={onSearch}\n          title={title}\n        />\n      </Suspense>\n\n      <div className=\" overflow-y-auto sm:scrollbar-hide grid grid-cols-3 gap-[30px] mt-14 \">\n        {imageList.length > 0 ? (\n          imageList.map((image, index) => {\n            return (\n              <Suspense\n                fallback={\n                  <div>\n                    <img src={LoadingIcon} className=\"h-6 w-6\" alt=\"Back\" />\n                  </div>\n                }\n              >\n                {1 === index ? (\n                  <ImageCard\n                    imageCardRef={firstImageCardRef}\n                    key={index}\n                    image={image}\n                  />\n                ) : imageList.length === index + 1 ? (\n                  <ImageCard\n                    imageCardRef={lastImageCardRef}\n                    key={index}\n                    image={image}\n                  />\n                ) : (\n                  <ImageCard key={index} image={image} />\n                )}\n              </Suspense>\n            );\n          })\n        ) : (\n          <div className=\"h-screen\"></div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}