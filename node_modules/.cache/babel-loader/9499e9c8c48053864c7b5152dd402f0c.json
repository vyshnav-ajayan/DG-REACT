{"ast":null,"code":"import { createStore, combineReducers, compose, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from '../reducers';\nimport sagas from '../saga';\nconst sagaMiddleware = createSagaMiddleware();\nconst logger = createLogger();\nconst middleware = [sagaMiddleware, logger];\nconst enhancers = [applyMiddleware(...middleware)];\nconst reducers = combineReducers(rootReducer);\nconst store = createStore(reducers, {}, compose(...enhancers));\nsagaMiddleware.run(sagas);\nexport default store;","map":{"version":3,"sources":["/Users/vyshnavajayan/Desktop/DG-REACT/src/store/index.js"],"names":["createStore","combineReducers","compose","applyMiddleware","createLogger","createSagaMiddleware","rootReducer","sagas","sagaMiddleware","logger","middleware","enhancers","reducers","store","run"],"mappings":"AAAA,SAASA,WAAT,EAAqBC,eAArB,EAAqCC,OAArC,EAA8CC,eAA9C,QAAqE,OAArE;AACA,SAAQC,YAAR,QAA2B,cAA3B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AACA,MAAMI,MAAM,GAAGL,YAAY,EAA3B;AAEA,MAAMM,UAAU,GAAG,CAACF,cAAD,EAAgBC,MAAhB,CAAnB;AACA,MAAME,SAAS,GAAG,CAACR,eAAe,CAAC,GAAGO,UAAJ,CAAhB,CAAlB;AAGA,MAAME,QAAQ,GAAGX,eAAe,CAACK,WAAD,CAAhC;AACA,MAAMO,KAAK,GAAGb,WAAW,CAACY,QAAD,EAAU,EAAV,EAAaV,OAAO,CAAC,GAAGS,SAAJ,CAApB,CAAzB;AAEAH,cAAc,CAACM,GAAf,CAAmBP,KAAnB;AACA,eAAeM,KAAf","sourcesContent":["import { createStore,combineReducers,compose, applyMiddleware } from 'redux';\nimport {createLogger} from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from '../reducers';\nimport sagas from '../saga';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst logger = createLogger();\n\nconst middleware = [sagaMiddleware,logger];\nconst enhancers = [applyMiddleware(...middleware)];\n\n\nconst reducers = combineReducers(rootReducer);\nconst store = createStore(reducers,{},compose(...enhancers));\n\nsagaMiddleware.run(sagas);\nexport default store;\n"]},"metadata":{},"sourceType":"module"}